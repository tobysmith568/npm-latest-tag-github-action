name: CI
on:
  push:
    branches:
      - main
      - renovate/*
  pull_request:
    branches:
      - main
      - renovate/*

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 14
          - 16
          - 18

    name: Node ${{ matrix.node }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies for Core
        working-directory: ./core
        run: npm ci

      - name: Build Core
        working-directory: ./core
        run: npm run build

      - name: Install dependencies
        run: npm ci

      - name: Run EsLint
        run: npx eslint --max-warnings 0 .

      - name: Run Prettier
        run: npx prettier --check .

      - name: Build
        run: npm run build

      - name: Run Tests
        run: npm run test:ci

      - name: Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node == '16'
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

      - name: FOSSA
        uses: fossas/fossa-action@v1.3.1
        if: matrix.os == 'ubuntu-latest' && matrix.node == '16'
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

  e2e:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 14
          - 16
          - 18
        test:
          - name: higher-patch-version
            result: latest
          - name: higher-minor-version
            result: latest
          - name: higher-major-version
            result: latest
          - name: higher-patch-version-than-v1
            result: latest-1
          - name: higher-minor-version-than-v1
            result: latest-1
          - name: lower-major-version-than-all
            result: latest-0
          - name: does-not-exist
            result: latest
          - name: invalid-path
            result: ""

    name: e2e-${{ matrix.test.name }} using Node ${{ matrix.node }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        continue-on-error: true
        id: subject
        with:
          package-json: "./e2e/${{ matrix.test.name }}/package.json"

      - if: always()
        shell: pwsh
        run: 'exit ("${{ steps.subject.outputs.latest-tag }}" -eq "${{ matrix.test.result }}" ? 0 : 1)'
