name: CI

on:
  push:
    branches:
      - main
      - renovate/*
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx nx run-many --target lint

      - name: Run Prettier
        run: npx prettier --check .

      - name: Run CSpell
        run: npx cspell **/*.*

  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npx nx run-many --target build

      - name: Verify GitHub Action build
        run: git diff --quiet --ignore-space-change ./dist/packages/github-action/main.js

      - name: Upload npm package build
        uses: actions/upload-artifact@v3
        with:
          name: npmPackageBuild
          path: ./dist/packages/npm-publish-latest-tag
          retention-days: 1

  test:
    name: Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npx nx run-many --target test --configuration ci

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

  licence:
    name: Check licences

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - uses: fossas/fossa-action@v1.3.1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

  e2e:
    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 14
          - 16
          - 18
        test:
          - name: higher-patch-version
            result: latest
          - name: higher-minor-version
            result: latest
          - name: higher-major-version
            result: latest
          - name: higher-patch-version-than-v1
            result: latest-1
          - name: higher-minor-version-than-v1
            result: latest-1
          - name: lower-major-version-than-all
            result: latest-0
          - name: does-not-exist
            result: latest
          - name: invalid-path
            result: ""

    name: e2e-${{ matrix.test.name }} using Node ${{ matrix.node }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        continue-on-error: true
        id: subject
        with:
          package-json: "./e2e/${{ matrix.test.name }}/package.json"

      - if: always()
        shell: pwsh
        run: 'exit ("${{ steps.subject.outputs.latest-tag }}" -eq "${{ matrix.test.result }}" ? 0 : 1)'
